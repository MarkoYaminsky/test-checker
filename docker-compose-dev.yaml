services:
  db:
    image: postgres:15
    container_name: db
    environment:
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}" ]
      interval: 2s
      timeout: 2s
      retries: 3
    volumes:
      - "./db:/var/lib/postgresql/data"
    ports:
      - "5433:5432"
    networks:
      - test-checker

  backend:
    container_name: backend
    build:
      context: .
      dockerfile: dev.Dockerfile
    env_file: .env
    command: zsh
    volumes:
      - .:/app/
    depends_on:
      - redis
      - db
    networks:
      - test-checker

  redis:
    image: redis:alpine
    container_name: redis
    restart: always
    ports:
      - "6380:6379"
    networks:
      - test-checker

  celery_worker:
    container_name: celery-worker
    build: .
    env_file: .env
    command: [ 'poetry', 'run', 'celery', '-A', 'app.core.celery_app', 'worker', '--loglevel=info' ]
    volumes:
      - ./app:/app/
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - DATABASE_HOST=db
      - DATABASE_PORT=5432
      - DATABASE_NAME=${DATABASE_NAME}
      - DATABASE_USER=${DATABASE_USER}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
    depends_on:
      - redis
      - db
    networks:
      - test-checker

networks:
  test-checker:
    driver: bridge
